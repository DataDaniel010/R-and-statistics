facet_grid(wand ~ sex)
barplot2 +
facet_wrap(vars(wand ~ sex))
barplot2 +
facet_wrap(vars(wand))
barplot2 +
facet_wrap(vars(house))
barplot2 +
facet_wrap(vars(course))
read_csv("data/task5Scatter.csv")
ggplot(hogwarts) +
geom_point(aes(x = Herbology_exam, y = Arythmancy_exam, fill = house),
shape = 23,
size = 6.0,
position = position_jitter(width = 3.0, height = 2.5)) +
theme_minimal() -> pointPlot1
pointPlot1 +
facet_wrap(vars(course))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE, fig.width=16, fig.height=10)
# install.packages("ggExtra")
# install.packages("ggpubr")
library(tidyverse)
library(ggExtra)
library(ggpubr)
pointPlot1 +
theme(
axis.title.x = element_blank()
)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE, fig.width=16, fig.height=10)
# install.packages("ggExtra")
# install.packages("ggpubr")
library(tidyverse)
library(ggExtra)
library(ggpubr)
hogwarts <- read_csv("data/hogwarts.csv")
hogwarts
read_csv("data/task5Scatter.csv")
ggplot(hogwarts) +
geom_point(aes(x = Herbology_exam, y = Arythmancy_exam, fill = house),
shape = 23,
size = 6.0,
position = position_jitter(width = 3.0, height = 2.5)) +
theme_minimal() -> pointPlot1
pointPlot1 +
theme(
axis.title.x = element_blank()
)
pointPlot1 +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20)
)
pointPlot1 +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25)
)
pointPlot1 +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold")
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.2, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.7, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.1, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 1.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 5.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 0.5)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 0.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 5.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 3.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 1.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 0.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 0.9, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(hjust = 0.5, size = 30),
plot.title = element_text(hjust = 0.9, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(hjust = 0.9, size = 30),
plot.title = element_text(hjust = 0.9, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 0.9, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20, angle = 25, face = "bold"),
axis.title.y = element_text(vjust = 0.5, size = 30),
plot.title = element_text(hjust = 0.5, size = 30)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = unit(3, "cm")
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(unit(3, "cm"))
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(unit(6, "cm"))
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(6)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(),
legend.position = "inside"
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(),
legend.position = "inside",
legend.justification = "top"
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(),
legend.position = "inside",
legend.justification = "top",
legend.direction = "horizontal"
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(),
legend.position = "inside",
legend.justification = "top",
legend.direction = "horizontal",
panel.background = element_rect(fill = "red")
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(),
legend.position = "inside",
legend.justification = "top",
legend.direction = "horizontal",
panel.background = element_rect(fill = "red",
colour = "blue")
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(),
legend.position = "inside",
legend.justification = "top",
legend.direction = "horizontal",
panel.background = element_rect(fill = "red",
colour = "blue",
linetype = "dotted",
linewidth = 4)
)
pointPlot1 +
labs(title = "Название") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size = 20,
angle = 25,
face = "bold"),
axis.title.y = element_text(vjust = 0.5,
size = 30),
plot.title = element_text(hjust = 0.5,
size = 30),
axis.ticks = element_line(),
legend.position = "inside",
legend.justification = "top",
legend.direction = "horizontal",
panel.background = element_rect(fill = "red",
colour = "blue",
linetype = "dotted",
linewidth = 4),
rect = element_rect(fill = "white")
)
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70)
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, colour = "lightblue")
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue")
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("line", x = 92, xend = 97, y = 100, yend = 100)
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("segment", x = 92, xend = 97, y = 100, yend = 100)
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("segment", x = 92, xend = 97, y = 100, yend = 100,
size = 3, arrow = arrow)
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("segment", x = 92, xend = 97, y = 100, yend = 100,
size = 3, arrow = arrow())
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("segment", x = 92, xend = 97, y = 100, yend = 100,
size = 3, arrow = arrow()) +
annotate("text", x = 85, y = 100,
size = 5, colour = "red",
label = "Dickhead")
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("segment", x = 92, xend = 97, y = 100, yend = 100,
size = 3, arrow = arrow()) +
annotate("text", x = 85, y = 100,
size = 8, colour = "red",
label = "Dickhead")
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("segment", x = 92, xend = 97, y = 100, yend = 100,
size = 3, arrow = arrow()) +
annotate("text", x = 85, y = 100,
size = 8, fill = "red",
label = "Dickhead")
pointPlot1 +
annotate("rect", xmin = 20, xmax = 40, ymin = 50, ymax = 70,
alpha = 0.4, fill = "lightblue") +
annotate("segment", x = 92, xend = 97, y = 100, yend = 100,
size = 3, arrow = arrow()) +
annotate("text", x = 85, y = 100,
size = 8, colour = "red",
label = "Dickhead")
fillValues = c("#C50000", "#ECB939", "#41A6D9","#1F5D25")
names(fillValues) <- hogwarts %>% pull(house) %>% unique()
ggplot(hogwarts) +
geom_bar(aes(x = blood_status, fill = house),
colour = "grey",
position = "fill",
linewidth = 2) +
scale_fill_manual(values = fillValues) -> barplot2
ggarrange(plotlist = list(pointPlot1, barplot2),
nrow = 2, ncol =1)
ggarrange(plotlist = list(pointPlot1, barplot2),
nrow = 2, ncol =1, heights = c(3, 1))
ggarrange(plotlist = list(pointPlot1, barplot2),
nrow = 1, ncol = 2, heights = c(3, 1))
ggarrange(plotlist = list(pointPlot1, barplot2),
nrow = 1, ncol = 2, heights = c(3, 1), width = c(3, 1))
ggarrange(plotlist = list(pointPlot1, barplot2),
nrow = 1, ncol = 2, width = c(3, 1))
ggarrange(plotlist = list(pointPlot1, barplot2),
nrow = 1, ncol = 2, width = c(3, 1))
ggarrange(plotlist = list(pointPlot1, barplot2),
nrow = 1, ncol = 2, widths = c(3, 1))
pointPlot1
ggMarginal(pointPlot1, type = "histogram")
ggMarginal(pointPlot1, type = "histogram", xparams = list(fill = "hotpink"))
ggMarginal(pointPlot1, type = "histogram", xparams = list(fill = "hotpink"), margins = "y")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE, fig.width=16, fig.height=10)
# install.packages("ggExtra")
# install.packages("ggpubr")
library(tidyverse)
library(ggExtra)
library(ggpubr)
hogwarts <- read_csv("data/hogwarts.csv")
hogwarts
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE, fig.width=16, fig.height=10)
# install.packages("ggExtra")
# install.packages("ggpubr")
library(tidyverse)
library(ggExtra)
library(ggpubr)
fillValues <- c("#C50000", "#ECB939", "#41A6D9", "#1F5D25")
names(fillValues) <- hogwarts %>% select(house) %>% pull() %>% unique()
gridLab <- c("Девочки", "Мальчики")
names(gridLab) <- hogwarts %>% select(sex) %>% pull() %>% unique() %>% sort()
ggplot(hogwarts, aes(y = house,
x = result))+
geom_violin(aes(fill = house))+
geom_boxplot(width = 0.05,
colour = "grey50")+
geom_vline(xintercept = 0,
linetype = "dashed",
colour = "salmon",
linewidth = 2)+
labs(
title = "Баллы студентов Хогвартса",
subtitle = "Распределение числа баллов у студентов различных факультетов Хогвартса в 2023-2024 учебном году",
y = "Колледж",
x = "Количество очков",
fill = "Колледж",
caption = "Источник: нездоровая фантазия автора лекции"
)+
facet_grid(. ~ sex,
labeller = labeller(sex = gridLab))+
theme_bw()+
theme(plot.title = element_text(size=32,
hjust=0.5,
family = "Times new roman"),
plot.subtitle = element_text(size = 20,
hjust=0.5,
colour = "#7D5535"),
axis.text.x = element_blank(),
axis.text.y = element_text(size=20,
family = "Times new roman"),
axis.title.x = element_blank(),
axis.title.y = element_text(size=29,
family = "Times new roman"),
legend.title = element_text(size=25,
family = "Times new roman"),
legend.text = element_text(size=25,
family = "Times new roman",
face = "italic"),
strip.text.x = element_text(size = 25,
family = "Times new roman"))+
scale_fill_manual(name = "Факультет",
labels = c("Гриффиндор", "Пуффендуй", "Когтевран", "Слизерин"),
values = fillValues)+
scale_x_continuous(breaks = seq(-400, 400, by = 50))+
annotate(geom = "segment", arrow = arrow(), y = rep("Ravenclaw",2), yend = rep("Slytherin",2), x = c(250, -250), xend = c(250, -250), linewidth = 1.3, colour = "black")+
coord_flip()
